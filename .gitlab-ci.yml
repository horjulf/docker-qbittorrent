# Variables
variables:
  DOCKER_DRIVER: "overlay2"
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_TLS_VERIFY: 1
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_CERT_PATH: "/certs/client"
  DOCKER_CLI_EXPERIMENTAL: "enabled"

# Build template
.build:
  stage: build
  image: docker:28
  services:
    - docker:28-dind
  variables:
    QBITTORRENT_LATEST: "5.1.2"
    LIBTORRENT_LATEST: "2.0.11"
    DOCKER_TAG: ""
    DOCKERFILE: Dockerfile
    OS_TAG: ""
  parallel:
    matrix:
      - QBITTORRENT_VERSION: "5.1.2"
        LIBTORRENT_VERSION: ["2.0.11", "1.2.20"]
  before_script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" ${CI_REGISTRY}
  script:
    - |
      tag="${DOCKER_TAG}-${QBITTORRENT_VERSION}-${LIBTORRENT_VERSION}"
      tag_version="${QBITTORRENT_VERSION}-${DOCKER_TAG}"

      # Build
      if [ -n "${OS_TAG}" ]; then
        docker build --pull -t "${CI_REGISTRY_IMAGE}:${tag}" -f "${DOCKERFILE}" --build-arg="QBITTORRENT_VERSION=${QBITTORRENT_VERSION}" --build-arg="LIBTORRENT_VERSION=${LIBTORRENT_VERSION}" --build-arg="OS_TAG=${OS_TAG}" .
      else
        docker build --pull -t "${CI_REGISTRY_IMAGE}:${tag}" -f "${DOCKERFILE}" --build-arg="QBITTORRENT_VERSION=${QBITTORRENT_VERSION}" --build-arg="LIBTORRENT_VERSION=${LIBTORRENT_VERSION}" .
      fi
      # Push
      docker push "${CI_REGISTRY_IMAGE}:${tag}"

      # Tag latest versions
      if [ "${QBITTORRENT_VERSION}" == "${QBITTORRENT_LATEST}" ] && [ "${LIBTORRENT_VERSION}" == "${LIBTORRENT_LATEST}" ]; then
        # DOCKER_TAG
        docker tag "${CI_REGISTRY_IMAGE}:${tag}" "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}"
        docker push "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}"

        # latest
        if [ "${DOCKER_TAG}" == "stable" ]; then
          # Latest
          docker tag "${CI_REGISTRY_IMAGE}:${tag}" "${CI_REGISTRY_IMAGE}:latest"
          docker push "${CI_REGISTRY_IMAGE}:latest"
          # Version
          docker tag "${CI_REGISTRY_IMAGE}:${tag}" "${CI_REGISTRY_IMAGE}:${QBITTORRENT_VERSION}"
          docker push "${CI_REGISTRY_IMAGE}:${QBITTORRENT_VERSION}"
        else
          # Version-tag
          docker tag "${CI_REGISTRY_IMAGE}:${tag}" "${CI_REGISTRY_IMAGE}:${tag_version}"
          docker push "${CI_REGISTRY_IMAGE}:${tag_version}"
        fi
      fi
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Alpine
build:stable:
  extends: .build
  variables:
    DOCKER_TAG: stable

build:edge:
  extends: .build
  variables:
    DOCKER_TAG: edge
    OS_TAG: edge

# Debian
build:stable-debian:
  extends: .build
  variables:
    DOCKER_TAG: stable-debian
    DOCKERFILE: Dockerfile.debian
